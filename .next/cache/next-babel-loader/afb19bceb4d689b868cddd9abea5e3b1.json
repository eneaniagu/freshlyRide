{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { useState, useEffect } from 'react';\nimport React from 'react';\nimport { useKeenSlider } from \"keen-slider/react\";\nimport Renderinfo from './Renderinfo';\nimport { Router, useRouter } from 'next/router';\n\nfunction RenderSearch({\n  product\n}) {\n  console.log(product);\n  const {\n    0: isLoading,\n    1: setisLoading\n  } = useState(true);\n  const {\n    0: dashData,\n    1: setDashData\n  } = useState(null);\n  useEffect(() => {\n    async function fetchdata() {\n      const resp = await fetch('http://localhost:8000/products');\n      const data = await resp.json();\n      setDashData(data);\n      setisLoading(false);\n    }\n\n    fetchdata();\n  }, []);\n  const router = useRouter();\n  const [pause, setPause] = React.useState(false);\n  const timer = React.useRef();\n  const [sliderRef, slider] = useKeenSlider({\n    loop: true,\n    duration: 1000,\n    spacing: 20,\n    slidesPerView: 1,\n    centered: true,\n    loop: true,\n    mode: \"snap\",\n    breakpoints: {\n      \"(min-width: 768px)\": {\n        slidesPerView: 2,\n        mode: \"free-snap\"\n      },\n      \"(min-width: 1200px)\": {\n        slidesPerView: 3,\n        mode: \"free-snap\"\n      }\n    },\n    dragStart: () => {\n      setPause(true);\n    },\n    dragEnd: () => {\n      setPause(false);\n    }\n  });\n  React.useEffect(() => {\n    sliderRef.current.addEventListener(\"mouseover\", () => {\n      setPause(true);\n    });\n    sliderRef.current.addEventListener(\"mouseout\", () => {\n      setPause(false);\n    });\n  }, [sliderRef]);\n  React.useEffect(() => {\n    timer.current = setInterval(() => {\n      if (!pause && slider) {\n        slider.next();\n      }\n    }, 2000);\n    return () => {\n      clearInterval(timer.current);\n    };\n  }, [pause, slider]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: console.log(dashData)\n  }, void 0, false) // {\n  //     dashData.map(prod => (\n  //         console.log(prod)\n  //     ))\n  // }\n  ;\n}\n\nexport default RenderSearch;","map":{"version":3,"sources":["/var/www/html/cardealers/components/FrontPages/Carlist.js"],"names":["useState","useEffect","React","useKeenSlider","Renderinfo","Router","useRouter","RenderSearch","product","console","log","isLoading","setisLoading","dashData","setDashData","fetchdata","resp","fetch","data","json","router","pause","setPause","timer","useRef","sliderRef","slider","loop","duration","spacing","slidesPerView","centered","mode","breakpoints","dragStart","dragEnd","current","addEventListener","setInterval","next","clearInterval"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react'\nimport React from 'react'\nimport { useKeenSlider } from \"keen-slider/react\"\nimport Renderinfo from './Renderinfo'\nimport { Router, useRouter } from 'next/router'\n\n\n\n\n\n\n\n\nfunction RenderSearch({ product }) {\n    console.log(product)\n    const [isLoading, setisLoading] = useState(true)\n    const [dashData, setDashData] = useState(null)\n\n\n    useEffect(() => {\n        async function fetchdata() {\n            const resp = await fetch('http://localhost:8000/products')\n            const data = await resp.json()\n            setDashData(data)\n            setisLoading(false)\n        }\n\n        fetchdata()\n    }, [])\n\n    const router = useRouter()\n\n    const [pause, setPause] = React.useState(false)\n    const timer = React.useRef()\n    const [sliderRef, slider] = useKeenSlider({\n        loop: true,\n        duration: 1000,\n        spacing: 20,\n        slidesPerView: 1,\n        centered: true,\n        loop: true,\n        mode: \"snap\",\n        breakpoints: {\n            \"(min-width: 768px)\": {\n                slidesPerView: 2,\n                mode: \"free-snap\",\n            },\n            \"(min-width: 1200px)\": {\n                slidesPerView: 3,\n                mode: \"free-snap\",\n            },\n        },\n        dragStart: () => {\n            setPause(true)\n        },\n        dragEnd: () => {\n            setPause(false)\n        },\n    })\n\n    React.useEffect(() => {\n        sliderRef.current.addEventListener(\"mouseover\", () => {\n            setPause(true)\n        })\n        sliderRef.current.addEventListener(\"mouseout\", () => {\n            setPause(false)\n        })\n    }, [sliderRef])\n\n    React.useEffect(() => {\n        timer.current = setInterval(() => {\n            if (!pause && slider) {\n                slider.next()\n\n            }\n        }, 2000)\n        return () => {\n            clearInterval(timer.current)\n        }\n    }, [pause, slider])\n\n\n    return (\n\n        <>\n            {console.log(dashData)}\n        </>\n\n        // {\n        //     dashData.map(prod => (\n\n        //         console.log(prod)\n        //     ))\n        // }\n\n    )\n}\n\nexport default RenderSearch\n"]},"metadata":{},"sourceType":"module"}