{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/html/cardealers/components/FrontPages/test.js\";\nimport { useEffect, useState } from 'react';\nexport default function Home({\n  users\n}) {\n  const {\n    0: reactData,\n    1: setReactData\n  } = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(res => res.json()).then(data => {\n      setReactData(data);\n      console.log(data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: \"3\",\n          className: \"topnav\",\n          children: \"Rendered By React JS | Client side rendered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), reactData.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          colSpan: \"3\",\n          className: \"topnav\",\n          children: \"Rendered By Next JS | Server side rendered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), users.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\nexport async function getServerSideProps({\n  params,\n  req,\n  res,\n  query,\n  preview,\n  previewData,\n  resolvedUrl,\n  locale,\n  locales,\n  defaultLocale\n}) {\n  console.log('Logging : ' + res);\n  const data = await fetch('https://jsonplaceholder.typicode.com/users');\n  const users = await data.json();\n  return {\n    props: {\n      users\n    }\n  };\n}","map":{"version":3,"sources":["/var/www/html/cardealers/components/FrontPages/test.js"],"names":["useEffect","useState","Home","users","reactData","setReactData","fetch","then","res","json","data","console","log","catch","e","map","user","index","name","username","email","getServerSideProps","params","req","query","preview","previewData","resolvedUrl","locale","locales","defaultLocale","props"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAyB;AACpC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVL,MAAAA,YAAY,CAACK,IAAD,CAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KALL,EAKOG,KALP,CAKcC,CAAD,IAAO;AAAEH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AAAgB,KALtC;AAMH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA,+BACI;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKV,SAAS,CAACW,GAAV,CAAc,CAACC,IAAD,EAAOC,KAAP,kBACX;AAAA,gCACI;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAA;AAAA;AAAA;AAAA,YAdJ,eAgBI;AAAA,8BACI;AAAA,+BACI;AAAI,UAAA,OAAO,EAAC,GAAZ;AAAgB,UAAA,SAAS,EAAC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,EAIKjB,KAAK,CAACY,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACP;AAAA,gCACI;AAAA,oBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKF,IAAI,CAACG;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,oBAAKH,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,CAJL;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AA+BH;AACD,OAAO,eAAeC,kBAAf,CAAkC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,GAAV;AAAef,EAAAA,GAAf;AAAoBgB,EAAAA,KAApB;AAA2BC,EAAAA,OAA3B;AAAoCC,EAAAA,WAApC;AAAiDC,EAAAA,WAAjD;AAA8DC,EAAAA,MAA9D;AAAsEC,EAAAA,OAAtE;AAA+EC,EAAAA;AAA/E,CAAlC,EAAkI;AACrInB,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeJ,GAA3B;AACA,QAAME,IAAI,GAAG,MAAMJ,KAAK,CAAC,4CAAD,CAAxB;AACA,QAAMH,KAAK,GAAG,MAAMO,IAAI,CAACD,IAAL,EAApB;AACA,SAAO;AAAEsB,IAAAA,KAAK,EAAE;AAAE5B,MAAAA;AAAF;AAAT,GAAP;AACH","sourcesContent":["import { useEffect, useState } from 'react'\n\nexport default function Home({ users }) {\n    const [reactData, setReactData] = useState([]);\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then(data => {\n                setReactData(data);\n                console.log(data)\n            }).catch((e) => { console.log(e) });\n    }, []);\n\n    return (\n        <>\n            <table>\n                <tr>\n                    <th colSpan='3' className='topnav'>Rendered By React JS | Client side rendered</th>\n                </tr>\n                {reactData.map((user, index) => (\n                    <tr>\n                        <td>{user.name}</td>\n                        <td>{user.username}</td>\n                        <td>{user.email}</td>\n                    </tr>\n                ))}\n            </table>\n\n            <br />\n\n            <table>\n                <tr>\n                    <th colSpan='3' className='topnav'>Rendered By Next JS | Server side rendered</th>\n                </tr>\n                {users.map((user, index) => (\n                    <tr>\n                        <td>{user.name}</td>\n                        <td>{user.username}</td>\n                        <td>{user.email}</td>\n                    </tr>\n                ))}\n            </table>\n        </>\n    )\n}\nexport async function getServerSideProps({ params, req, res, query, preview, previewData, resolvedUrl, locale, locales, defaultLocale }) {\n    console.log('Logging : ' + res);\n    const data = await fetch('https://jsonplaceholder.typicode.com/users');\n    const users = await data.json();\n    return { props: { users } }\n}"]},"metadata":{},"sourceType":"module"}